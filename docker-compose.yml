services:
  dashboard-traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    logging:
      # Configure the logs retention according to your needs
      options:
        max-size: "10m"
        max-file: "3"
    command:
      - "--api.debug=true"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      # Get Docker as the provider
      - "--providers.docker=true"
      # Avoid that all containers are exposed
      - "--providers.docker.exposedbydefault=false"
      # Settle the ports for the entry points
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--entrypoints.websecure.http.tls.domains[0].main=hotanloc.xyz"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.hotanloc.xyz"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=hotanloc2001@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - directus_traefik
    volumes:
      # Store certificates in ./letsencrypt/acme.json
      - "./letsencrypt:/letsencrypt"
      # Connect to Docker socket
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    deploy:
      placement:
        constraints:
          - node.role == manager
  reactapp:
    build: ./client
    container_name: react_vite_app
    networks:
      - directus_traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client1.rule=Host(`lv.hotanloc.xyz`)"
      - "traefik.http.routers.client1.entrypoints=websecure"
      - "traefik.http.routers.client1.tls.certresolver=letsencrypt"
      - "traefik.http.routers.client1.service=client1"
      - "traefik.http.services.client1.loadbalancer.server.port=8000"

  server:
    user: "node"
    container_name: server
    build:
      context: ./server
    environment:
      - NODE_ENV=production
    restart: always
    networks:
      - directus_traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`lv-server.hotanloc.xyz`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=letsencrypt"
      - "traefik.http.routers.client.service=client"
      - "traefik.http.services.client.loadbalancer.server.port=5000"
    depends_on:
      - postgres
      - reactapp

  postgres:
    container_name: postgres_container
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-123123}
      POSTGRES_DB: ${POSTGRES_DB:-article}
      PGDATA: ./data/postgres
    volumes:
      - ./postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - directus_traefik
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-holoc22102001@gmail.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - directus_traefik
    restart: unless-stopped

  directus:
    image: directus/directus
    volumes:
      - ./uploads:/directus/uploads

      - ./extensions:/directus/extensions
    depends_on:
      - postgres
    # env_file: .env
    environment:
      KEY: "255d861b-5ea1-5996-9aa3-922530ec40b1"
      SECRET: "6116487b-cda1-52c2-b5b5-c8022c45e263"

      DB_CLIENT: "pg"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_DATABASE: "article"
      DB_USER: "postgres"
      DB_PASSWORD: "123123"

      ADMIN_EMAIL: "holoc22102001@gmail.com"
      ADMIN_PASSWORD: "locvtc123"
      CORS_ENABLED: true
      CORS_ORIGIN: "*"
      CORS_METHODS: "GET,POST,PATCH,DELETE"
      EMAIL_FROM: "demo@hotanloc.xyz"
      EMAIL_TRANSPORT: "smtp"
      EMAIL_SMTP_HOST: "hotanloc.xyz"
      EMAIL_SMTP_PORT: "25"
      EMAIL_SMTP_USER: "demo@hotanloc.xyz"
      EMAIL_SMTP_PASSWORD: "ARTant,#,25"
      EMAIL_SMTP_IGNORE_TLS: true
      EMAIL_SMTP_SECURE: false

    # ports:
    #   - 8057:8055
    networks:
      - directus_traefik

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lv-directus.rule=Host(`lv-directus.hotanloc.xyz`)"
      - "traefik.http.routers.lv-directus.entrypoints=websecure"
      - "traefik.http.routers.lv-directus.tls.certresolver=letsencrypt"
      - "traefik.http.routers.lv-directus.service=lv-directus"
      - "traefik.http.services.lv-directus.loadbalancer.server.port=8055"

networks:
  directus_traefik:

volumes:
  postgres:
  pgadmin:
